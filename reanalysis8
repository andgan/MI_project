# final code

# section 1: merge data
# section 2: filter data
# section 3: principal component analysis
# section 4: analyze I20, I25, R07, and R10
# section 5: SNP analysis















##################################################
# section 1: merge data 
##################################################

# get registry data
/humgen/atgu1/fs03/wip/aganna/uk_bio/pheno/original/hesin_registry.tsv
# extract ID, ICD10, and ICD10 date from registry data
rm(list=ls(all=TRUE))
total = read.table(file = 'hesin_registry.tsv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
total = total[, c(1, 11, 23)]
icd10 = substr(total$diag_icd10, 0, 3)
total = cbind(total, icd10)
total = total[,c(1, 4, 3)]
write.table(total, file = 'hesin_registry_new.tsv', sep='\t')

# plot distribution of ICD10 date to identify timeframe 
plot(table(total$epistart), xlab = "ICD Date", ylab = "Frequency")
# January 1998 to April 2015

# get assessment center data and extract different variables
setwd("/humgen/atgu1/fs03/wip/aganna/uk_bio/pheno/derived/")
load('out4.Rdata')
# extract sex (f31), assessment center visit date (f53), assessment center visit age (f21003), assessment center location (f54), date of myocardial infarction (f42000), date of stroke (f42006), systolic blood pressure (f4080), diastolic blood pressure (f4079), body mass index (f21001), and smoking status (f20116)
bdE4_new = bdE4[, c("f.eid", "f.31.0.0", "f.53.0.0", "f.21003.0.0", "f.54.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0", "f.21001.0.0", "f.20116.0.0")]
write.table(bdE4_new, file='assess_cent_all.tsv',sep='\t')

# merge all three data sets: registry data, assessment center data, more assessment center data
rm(list=ls(all=TRUE))
reg = read.table(file = 'hesin_registry_new.tsv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
ac = read.table(file = 'assess_cent_all.tsv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
load('dU.Rdata')
ac.new = ac[, c("f.eid", "f.21003.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0")]
ac.all = merge(ac.new, dU, by.x = "f.eid", by.y = "eid", all.x = TRUE)
data = merge(reg, ac.all, by.x = "eid", by.y = "f.eid", all.x = TRUE)
colnames(data) = c("eid", "icd10", "icd10_date", "ac_age", "mi_date", "stroke_date", "sbp", "dbp", "birth_date", "sex", "death", "death_date", "ac_date", "ac_location", "bmi", "bp", "smoke", "age")
data = data[, c("eid", "sex", "age", "birth_date", "death", "death_date", "bp", "sbp", "dbp", "bmi", "smoke", "mi_date", "stroke_date", "icd10", "icd10_date", "ac_date", "ac_location", "ac_age")]
write.table(data, file = 'hesin_registry_assess_cent_all_v2.csv', sep = '\t')















##################################################
# section 2: filter data 
##################################################

# get data
rm(list=ls(all=TRUE))
total = read.table(file = 'hesin_registry_assess_cent_all_v2.csv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
nrow(total)
#2779633 rows
length(unique(total$eid))
#395985 individuals
length(unique(total$icd10))
#1472 ICD codes
x = total[which(total$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#17620

# exclude ICD10 codes that are not related to disease
total.new = total[order(total$icd10), ]
head(grep('V', total.new$icd10))
#2649168
tail(grep('Z', total.new$icd10))
#2779633
total.new$icd10[2649168:2779633] <- "NA"
nrow(total.new)
#2779633 rows
length(unique(total.new$eid))
#395985 individuals
length(unique(total.new$icd10))
#1389 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#17620

# remove ICD10 codes that do not have a date
total.new.na = total.new[which(total.new$icd10 == 'NA'), ]
total.new.temp = total.new[-which(total.new$icd10 == 'NA'), ]
total.new.temp = total.new.temp[-which(total.new.temp$icd10_date == "NA"), ]
total.new = rbind(total.new.na, total.new.temp)
rm(total.new.temp, total.new.na)
nrow(total.new)
#2774909 rows
length(unique(total.new$eid))
#395826 individuals
length(unique(total.new$icd10))
#1389 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#17616

# remove individuals with myocardial infarction outside of timeframe
total.new = total.new[order(total.new$mi_date), ]
head(grep('1998-01', total.new$mi_date))
#43447
tail(grep('2015-03', total.new$mi_date))
#269102
head(grep('NA', total.new$mi_date))
#272000
tail(grep('NA', total.new$mi_date))
#2774909
total.new = total.new[c(43447:269102, 272000:2774909), ]
nrow(total.new)
#2728566 rows
length(unique(total.new$eid))
#392743 individuals
length(unique(total.new$icd10))
#1389 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#14533

# exclude ICD10 codes outside of timeframe
total.new.na = total.new[which(total.new$icd10_date == 'NA' | total.new$mi_date == 'NA'), ]
total.new.temp = total.new[-which(total.new$icd10_date == 'NA' | total.new$mi_date == 'NA'), ]
total.new.temp$icd10[as.Date(total.new.temp$icd10_date) > as.Date("2015-03-31")] = "NA"
total.new.temp$icd10[as.Date(total.new.temp$icd10_date) < as.Date("1998-01-01")] = "NA"
total.new.temp$icd10[as.Date(total.new.temp$mi_date) - as.Date(total.new.temp$icd10_date) < 8] = "NA"
total.new = rbind(total.new.temp, total.new.na)
rm(total.new.temp, total.new.na)
nrow(total.new)
#2728566 rows
length(unique(total.new$eid))
#392743 individuals
length(unique(total.new$icd10))
#1384 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#14533

# remove individuals with I25
total.new = total.new[!total.new$icd10 == "I25", ]
nrow(total.new)
#2702582 rows
length(unique(total.new$eid))
#391918 individuals
length(unique(total.new$icd10))
#1383 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#14518

# make dichotomous variable for myocardial infarction
total.new.mi = total.new[which(total.new$mi_date != 'NA'), ]
total.new.no.mi = total.new[which(total.new$mi_date == 'NA'), ]
total.new.mi = cbind(total.new.mi, "mi" = "1")
total.new.no.mi = cbind(total.new.no.mi, "mi" = "0")
total.new = rbind(total.new.mi, total.new.no.mi)
rm(total.new.mi, total.new.no.mi)



*** edit this too
# only keep first ICD10 code
total.new = total.new[order(total.new$eid), ]
total.new = subset(total.new, !duplicated(total.new$eid))
nrow(total.new)
#35476 rows
length(unique(total.new$eid))
#35476 individuals
length(unique(total.new$icd10))
#265 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#15131


**** need to loop across icd10 codes
# make dichotomous variable for I20
total.new.i20 = total.new[which(total.new$icd10 == 'I20'), ]
total.new.no.i20 = total.new[which(total.new$icd10 != 'I20'), ]
total.new.i20 = cbind(total.new.i20, "i20" = "1")
total.new.no.i20 = cbind(total.new.no.i20, "i20" = "0")
total.new = rbind(total.new.i20, total.new.no.i20)
rm(total.new.i20, total.new.no.i20)



**** change this
# remove ICD10 codes before assessment center visit date
total.new=total.new[which(as.Date(total.new$icd10_date) > as.Date(total.new$ac_date)), ]
nrow(total.new)
#171076 rows
length(unique(total.new$eid))
#35476 individuals
length(unique(total.new$icd10))
#662 ICD codes
x = total.new[which(total.new$mi_date != "NA"), ]
length(unique(x$eid))
rm(x)
#15131

# group 1 is icd and mi
# group 2 is icd and no mi
# group 3 is no icd and mi
# group 4 is no icd and no mi

# calculate time1 and time 2 for four different groups
data1 = subset(total.new, i20 == 1 & mi == 1)
data1$time1 = as.Date(data1$icd10_date) - as.Date(data1$ac_date)
data1$time2 = as.Date(data1$mi_date) - as.Date(data1$icd10_date)
# 288 individuals
data2 = subset(total.new, i20 == 1 & mi == 0)
data2$time1 = as.Date(data2$icd10_date) - as.Date(data2$ac_date)
data2$time2 = as.Date("2015-03-31") - as.Date(data2$icd10_date)
# 0 individuals
data3 = subset(total.new, i20 == 0 & mi == 1)
data3$time1 = 0
data3$time2 = as.Date(data3$ac_date) - as.Date(data3$mi_date)
# 14843 individuals
data4 = subset(total.new, i20 == 0 & mi == 0)
data4$time1 = 0
data4$time2 = as.Date(data4$ac_date) - as.Date("2015-03-31")
# 20345 individuals

# combine data frames for four different groups
total.new = rbind(data1, data2, data3, data4)
rm(data1, data2, data3, data4)

# survival analysis
#install.packages("survival")
library(survival)
mod <- coxph(Surv(time1, time2, i20) ~ age + sex, data = total.new)

- make age as a numeric variable, not a factor as.numeric(as.character())
- registry start 1998

*** confused here because i dont know how to analyze the results of the survival analysis, because i need to use the results of the survival analysis to remove individuals for the future steps of making clusters and analyzing the polygenic risk score


# make final dataframe
total1$icd10_date[total1$icd_new == "NA"]="NA"
write.table(total1, file='hesin_registry_assess_cent_all_new_icd10_filtered_v2.tsv',sep='\t')















##################################################
# section 3: principal component analysis
##################################################

# load data
rm(list=ls(all=TRUE))
total=read.table(file='hesin_registry_assess_cent_all_new_icd10_filtered_v2.tsv',sep='\t',header=TRUE,na.strings="",stringsAsFactors=FALSE)
nrow(total)
#1077488 rows
length(unique(total$eid))
#391918 individuals
length(unique(total$icd_new))
#142 ICD codes
x=total[which(total$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#14518

# remove individuals without myocardial infarction
total.new=total[which(total$mi=="1"),]
nrow(total.new)
#34568 rows
length(unique(total.new$eid))
#14518 individuals
length(unique(total.new$icd_new))
#142 ICD codes
x=total.new[which(total.new$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#14518

# cluster individuals without previous ICD10 codes
clust0=total.new[which(total.new$icd_new=="NA"),]
nrow(clust0)
#14362 rows
length(unique(clust0$eid))
#14362 individuals
length(unique(clust0$icd_new))
#1 ICD codes
x=clust0[which(clust0$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#14362
total.new=total.new[-which(total.new$icd_new=="NA"),]
nrow(total.new)
#20206 rows
length(unique(total.new$eid))
#8092 individuals
length(unique(total.new$icd_new))
#141 ICD codes
x=total.new[which(total.new$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#8092
clust0=clust0[-which(clust0$eid %in% total.new$eid),]
nrow(clust0)
#6426 rows
length(unique(clust0$eid))
#6426 individuals
length(unique(clust0$icd_new))
#1 ICD codes
x=clust0[which(clust0$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#6426

# create binary sparse similarity matrix
mat.df=total.new[,c("eid","icd_new")]
mat.df=mat.df[order(mat.df$eid),]
mat=as.matrix(table(mat.df))

# do principal component analysis
pca=prcomp(mat,center=TRUE,scores=TRUE)
par(mfrow=c(2,2))
biplot(pca,scale=0)
biplot(pca,scale=0,choices=c(2,3))
biplot(pca,scale=0,choices=c(3,4))
biplot(pca,scale=0,choices=c(4,5))
summary(pca)

# plot proportion of variance and cumulative proportion of variable
plot(pca$sdev^2/sum(pca$sdev^2),xlab="PC",ylab="Variance",main="Proportion of Variance")
plot(cumsum(pca$sdev^2 / sum(pca$sdev^2)),xlab="PC",ylab="Cumulative Variance",main="Cumulative Proportion of Variance")

# plot clusters in 2D
pca.ind=as.data.frame(pca$x)
pca.ind$color="black"
pca.ind$color[pca.ind[,5]>=-0.5]=1
pca.ind$color[pca.ind[,5]<=-0.5]=2
par(mfrow=c(2,2))
plot(pca.ind[,1],pca.ind[,2],col=pca.ind$color,pch=16,cex=1,xlab="PC1",ylab="PC2")
plot(pca.ind[,2],pca.ind[,3],col=pca.ind$color,pch=16,cex=1,xlab="PC2",ylab="PC3")
plot(pca.ind[,3],pca.ind[,4],col=pca.ind$color,pch=16,cex=1,xlab="PC3",ylab="PC4")
plot(pca.ind[,4],pca.ind[,5],col=pca.ind$color,pch=16,cex=1,xlab="PC4",ylab="PC5")
plot(pca.ind[,2],pca.ind[,3],pch=16,cex=1,xlab="PC2",ylab="PC3")
pca.df=pca.ind[,1:3]
rm(pca.ind)

# plot clusters in 3D
#install.packages("pca3d")
library(pca3d)
pca.df$cluster <- 0
pca.df$cluster <- ifelse(pca.df$PC2 < -0.5 & pca.df$PC3 > -0.75,1,
				ifelse(pca.df$PC2 < -0.5 & pca.df$PC3 < -0.75,2,
				ifelse(pca.df$PC2 < 0.0 & pca.df$PC2 > -0.5 & pca.df$PC3 < -0.5,3,
				ifelse(pca.df$PC2 < 0.0 & pca.df$PC2 > -0.5 & pca.df$PC3 > -0.5,4,
				ifelse(pca.df$PC2 < 0.4 & pca.df$PC2 > -0.1 & pca.df$PC3 < -0.65,5,
				ifelse(pca.df$PC2 < 0.4 & pca.df$PC2 > -0.1 & pca.df$PC3 > -0.65,6,
				ifelse(pca.df$PC2 > 0.4 & pca.df$PC3 < -0.5,7,
				ifelse(pca.df$PC2 > 0.4 & pca.df$PC3 > -0.5,8,NA))))))))
pca3d(pca$x[,1:3],col=pca.df$cluster)

# assign clusters
cluster1=pca.df[which(pca.df$cluster=="1"),]
cluster2=pca.df[which(pca.df$cluster=="2"),]
cluster3=pca.df[which(pca.df$cluster=="3"),]
cluster4=pca.df[which(pca.df$cluster=="4"),]
cluster5=pca.df[which(pca.df$cluster=="5"),]
cluster6=pca.df[which(pca.df$cluster=="6"),]
cluster7=pca.df[which(pca.df$cluster=="7"),]
cluster8=pca.df[which(pca.df$cluster=="8"),]
cluster1=total.new[which(total.new$eid %in% rownames(cluster1)),]
cluster2=total.new[which(total.new$eid %in% rownames(cluster2)),]
cluster3=total.new[which(total.new$eid %in% rownames(cluster3)),]
cluster4=total.new[which(total.new$eid %in% rownames(cluster4)),]
cluster5=total.new[which(total.new$eid %in% rownames(cluster5)),]
cluster6=total.new[which(total.new$eid %in% rownames(cluster6)),]
cluster7=total.new[which(total.new$eid %in% rownames(cluster7)),]
cluster8=total.new[which(total.new$eid %in% rownames(cluster8)),]
cluster0=cbind("cluster"="0",clust0)
cluster1=cbind("cluster"="1",cluster1)
cluster2=cbind("cluster"="2",cluster2)
cluster3=cbind("cluster"="3",cluster3)
cluster4=cbind("cluster"="4",cluster4)
cluster5=cbind("cluster"="5",cluster5)
cluster6=cbind("cluster"="6",cluster6)
cluster7=cbind("cluster"="7",cluster7)
cluster8=cbind("cluster"="8",cluster8)
cluster.na=total[which(total$mi=="0"),]
cluster.na=cbind("cluster"="NA",cluster.na)
rm(clust0)
all=rbind(cluster0,cluster1,cluster2,cluster3,cluster4,cluster5,cluster6,cluster7,cluster8,cluster.na)
all.new=rbind(cluster0,cluster1,cluster2,cluster3,cluster4,cluster5,cluster6,cluster7,cluster8)

# organize dataframe
all.df=all.new[,c("cluster","eid","sex","dob","sbp","dbp","bmi","mi_age","mi_time","smoking")]
all.df=all.df[!duplicated(all.df$eid),]
all.df$cluster0 <- ifelse(all.df$cluster==0,1,0)
all.df$cluster1 <- ifelse(all.df$cluster==1,1,0)
all.df$cluster2 <- ifelse(all.df$cluster==2,1,0)
all.df$cluster3 <- ifelse(all.df$cluster==3,1,0)
all.df$cluster4 <- ifelse(all.df$cluster==4,1,0)
all.df$cluster5 <- ifelse(all.df$cluster==5,1,0)
all.df$cluster6 <- ifelse(all.df$cluster==6,1,0)
all.df$cluster7 <- ifelse(all.df$cluster==7,1,0)
all.df$cluster8 <- ifelse(all.df$cluster==8,1,0)
all.df$sex <- ifelse (all.df$sex=="Male",1,0)
all.df$sbp <- as.numeric(all.df$sbp)
all.df$dbp <- as.numeric(all.df$dbp)
all.df$bmi <- as.numeric(all.df$bmi)
all.df$mi_age <- as.numeric(all.df$mi_age)
all.df$mi_time <- as.numeric(all.df$mi_time)
all.df$smoking <- as.numeric(all.df$smoking)

# identify ICD10 codes driving principal components 
pca.icd=as.data.frame(pca$rotation)
pca.icd=cbind(icd10=rownames(pca.icd),pca.icd)
barplot(pca.icd$PC3,names.arg=rownames(pca.icd),las=2)
rm(pca.icd)















####################################################################################################
# section 4: analyze I20, I25, R07, and R10
####################################################################################################

# create linear regression model for ICD10 codes
all.df$i20 <- ifelse(all.df$eid %in% all.new$eid[all.new$icd_new=="I20"],1,0)
all.df$r07 <- ifelse(all.df$eid %in% all.new$eid[all.new$icd_new=="R07"],1,0)
all.df$r10 <- ifelse(all.df$eid %in% all.new$eid[all.new$icd_new=="R10"],1,0)
I20<-NULL
R07<-NULL
R10<-NULL
res<-NULL
for (i in 11:19) {
	I20 <- coef(summary(glm(as.numeric(all.df[,i])~as.numeric(i20)+as.numeric(sex)+as.numeric(dob),data=all.df)))[2,c(1,4)]
	R07 <- coef(summary(glm(as.numeric(all.df[,i])~as.numeric(r07)+as.numeric(sex)+as.numeric(dob),data=all.df)))[2,c(1,4)]
	R10 <- coef(summary(glm(as.numeric(all.df[,i])~as.numeric(r10)+as.numeric(sex)+as.numeric(dob),data=all.df)))[2,c(1,4)]
	res <- rbind(I20,R07,R10)
	assign(paste("res",i-11,sep=""),res)
}
rm(i,I20,R07,R10,res)
rm(res0,res1,res2,res3,res4,res5,res6,res7,res8)

# merge polygenic risk score
prs=read.table(file='prs_cad_ukbb.tsv',sep='\t',header=TRUE,na.strings="",stringsAsFactors=FALSE)
all.df=merge(all.df,prs,by.x="eid",by.y="ID",all.x=TRUE)
all.df=all.df[!duplicated(all.df$eid),]

# find significance level of association
for (i in 11:19) {
	sbp=anova(lm(scale(sbp)~all.df[,i]+sex+as.numeric(dob),data=all.df))
	dbp=anova(lm(scale(dbp)~all.df[,i]+sex+as.numeric(dob),data=all.df))
	bmi=anova(lm(scale(bmi)~all.df[,i]+sex+as.numeric(dob),data=all.df))
	smoking=anova(lm(scale(smoking)~all.df[,i]+sex+as.numeric(dob),data=all.df))
	score=anova(lm(scale(PRS_0.5)~all.df[,i]+sex+as.numeric(dob),data=all.df))
	variables=rbind(sbp[5],dbp[5],bmi[5],smoking[5],score[5])
	assign(paste("variables",i-11,sep=""),variables)
}
rm(i,sbp,dbp,bmi,smoking,score)
rm(variables,variables0,variables1,variables2,variables3,variables4,variables5,variables6,variables7,variables8)

# find expected value for risk factors
for (i in 11:19) {
	sbp=exp(coef(glm(scale(sbp)~all.df[,i]+sex+as.numeric(dob),data=all.df)))
	dbp=exp(coef(glm(scale(dbp)~all.df[,i]+sex+as.numeric(dob),data=all.df)))
	bmi=exp(coef(glm(scale(bmi)~all.df[,i]+sex+as.numeric(dob),data=all.df)))
	smoking=exp(coef(glm(scale(smoking)~all.df[,i]+sex+as.numeric(dob),data=all.df)))
	score=exp(coef(glm(scale(PRS_0.5)~all.df[,i]+sex+as.numeric(dob),data=all.df)))
	variables=rbind(sbp[2],dbp[2],bmi[2],smoking[2],score[2])
	assign(paste("variables",i-11,sep=""),variables)
}
rm(i,sbp,dbp,bmi,smoking,score)
variables.all=cbind(variables0,variables1,variables2,variables3,variables4,variables5,variables6,variables7,variables8)
colnames(variables.all)<-c("cluster0","cluster1","cluster2","cluster3","cluster4","cluster5","cluster6","cluster7","cluster8")
rownames(variables.all)<-c("sbp","dbp","bmi","smoking","prs")
rm(variables,variables0,variables1,variables2,variables3,variables4,variables5,variables6,variables7,variables8,variables.all)

# find means of risk factors across clusters
sbp=aggregate(sbp~cluster,all.df,mean)
dbp=aggregate(dbp~cluster,all.df,mean)
bmi=aggregate(bmi~cluster,all.df,mean)
smoking=aggregate(smoking~cluster,all.df,mean)
score=aggregate(PRS_0.5~cluster,all.df,mean)
means=cbind(sbp,dbp,bmi,smoking,score)
rm(sbp,dbp,bmi,smoking,score)
means$sbp=round(means$sbp,1)
means$dbp=round(means$dbp,1)
means$bmi=round(means$bmi,1)
means$smoking=round(means$smoking,2)
means$PRS_0.5=round(means$PRS_0.5,2)
means<-means[,c(1,2,4,6,8,10)]
rm(all.df,means)

# create new dataframe
all=merge(all,prs,by.x="eid",by.y="ID",all.x=TRUE)
all.new=all[,c(1:7,10:16,18,28)]
all.new=all.new[!duplicated(all.new$eid),]
write.table(all.new,file='hesin_registry_assess_cent_all_new_individual_clustered_v2.tsv',sep='\t')

# create equation to calculate summary statistics
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
                      conf.interval=.95, .drop=TRUE) {
    library(plyr)
    length2 <- function (x, na.rm=FALSE) {
        if (na.rm) sum(!is.na(x))
        else       length(x)
    }
    datac <- ddply(data, groupvars, .drop=.drop,
      .fun = function(xx, col) {
        c(N    = length2(xx[[col]], na.rm=na.rm),
          mean = mean   (xx[[col]], na.rm=na.rm),
          sd   = sd     (xx[[col]], na.rm=na.rm)
        )
      },
      measurevar
    )   
    datac <- rename(datac, c("mean" = measurevar))
    datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
    ciMult <- qt(conf.interval/2 + .5, datac$N-1)
    datac$ci <- datac$se * ciMult
    return(datac)
}

# calculate confidence interval
#install.packages("plyr")
library(plyr)
stat<-summarySE(all.new,measurevar="PRS_0.5",groupvars="cluster",na.rm=TRUE)
stat$cluster<-c("0","1","2","3","4","5","6","7","8","No MI")

# plot polygenic risk score across clusters
#install.packages("ggplot2")
library(ggplot2)
ggplot(stat,aes(x=cluster,y=PRS_0.5)) + geom_bar(position=position_dodge(),stat="identity") + labs(x="Cluster",y="Polygenic Risk Score") + theme(panel.grid.major=element_blank(),panel.grid.minor=element_blank(),panel.background=element_blank(),axis.line = element_line(colour="black")) + theme(text=element_text(size=20)) + geom_errorbar(aes(ymin=stat$PRS_0.5-stat$ci,ymax=stat$PRS_0.5+stat$ci),width=0.2,position=position_dodge(0.9))
rm(summarySE,stat)

**************************************************
# analyze I20 and I25
all$PRS_0.5_Level<-ifelse(all$PRS_0.5>quantile(all$PRS_0.5,0.80,na.rm=TRUE),2,ifelse(all$PRS_0.5<quantile(all$PRS_0.5,0.20,na.rm=TRUE),0,1))
i20<-all[which(all$icd_new=="I20"),]
r07<-all[which(all$icd_new=="R07"),]
i20<-i20[-which(i20$eid %in% both$eid),]
id<-c(i20$eid,i25$eid,both$eid)
neither<-all[-which(all$eid %in% id),]
rm(id)
i20<-i20[!duplicated(i20$eid),]
r07<-r07[!duplicated(r07$eid),]
both<-both[!duplicated(both$eid),]
neither<-neither[!duplicated(neither$eid),]

# create baseline linear regression models 
i20.model<-glm(as.numeric(mi)~as.numeric(PRS_0.5),family=binomial(),data=i20)
#0.5289077
i25.model<-glm(as.numeric(mi)~as.numeric(PRS_0.5),family=binomial(),data=i25)
#0.543667
r07.model<-glm(as.numeric(mi)~as.numeric(PRS_0.5),family=binomial(),data=r07)
#0.5561553
both.model<-glm(as.numeric(mi)~as.numeric(PRS_0.5),family=binomial(),data=both)
#0.5178403
neither.model<-glm(as.numeric(mi)~as.numeric(PRS_0.5),family=binomial(),data=neither)
#0.5708599

# calculate AUC from ROC curve analysis
#install.packages("ROCR")
library(ROCR)
p <- predict(r07.model,newdata=r07,type="response")
pr <- prediction(p,r07$mi)
prf <- performance(pr,measure="tpr",x.measure="fpr")
plot(prf)
auc <- performance(pr,measure="auc")
auc <- auc@y.values[[1]]
auc
rm(p,pr,prf,auc)

# create labels for linear regression models
i20$label<-"I20"
i25$label<-"I25"
r07$label<-"R07"
both$label<-"I20 and I25"
neither$label<-"No I20 or I25"
data=rbind(i20,i25,r07,both,neither)

# create linear regression models
i20.model2<-glm(as.numeric(mi)~as.factor(PRS_0.5_Level)+as.factor(sex)+as.numeric(dob)+as.numeric(sbp)+as.numeric(dbp)+as.factor(smoking)+as.numeric(bmi),data=i20,family=binomial())
i25.model2<-glm(as.numeric(mi)~as.factor(PRS_0.5_Level)+as.factor(sex)+as.numeric(dob)+as.numeric(sbp)+as.numeric(dbp)+as.factor(smoking)+as.numeric(bmi),data=i25,family=binomial())
r07.model2<-glm(as.numeric(mi)~as.factor(PRS_0.5_Level)+as.factor(sex)+as.numeric(dob)+as.numeric(sbp)+as.numeric(dbp)+as.factor(smoking)+as.numeric(bmi),data=r07,family=binomial())
both.model2<-glm(as.numeric(mi)~as.factor(PRS_0.5_Level)+as.factor(sex)+as.numeric(dob)+as.numeric(sbp)+as.numeric(dbp)+as.factor(smoking)+as.numeric(bmi),data=both,family=binomial())
neither.model2<-glm(as.numeric(mi)~as.factor(PRS_0.5_Level)+as.factor(sex)+as.numeric(dob)+as.numeric(sbp)+as.numeric(dbp)+as.factor(smoking)+as.numeric(bmi),data=neither,family=binomial())

# calculate odds ratio
exp(coef(i20.model2)[2:3])
exp(coef(i25.model2)[2:3])
exp(coef(r07.model2)[2:3])
exp(coef(both.model2)[2:3])
exp(coef(neither.model2)[2:3])

# find p-value
summary(i20.model2)
summary(i25.model2)
summary(r07.model2)
summary(both.model2)
summary(neither.model2)
**************************************************

# plot average polygenic risk score across ICD10 codes
a=c("I20","I20","I25","I25","I20 and I25","I20 and I25","No I20 or I25","No I20 or I25","R07","R07")
b=c("MI","No MI","MI","No MI","MI","No MI","MI","No MI","MI","No MI")
c=c(mean(data$PRS_0.5[which(data$label=="I20" & data$mi =="1")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="I20" & data$mi =="0")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="I25" & data$mi =="1")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="I25" & data$mi =="0")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="I20 and I25" & data$mi =="1")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="I20 and I25" & data$mi =="0")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="No I20 or I25" & data$mi =="1")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="No I20 or I25" & data$mi =="0")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="R07" & data$mi =="1")],na.rm=TRUE),mean(data$PRS_0.5[which(data$label=="R07" & data$mi =="0")],na.rm=TRUE))
c<-round(c,2)
average=cbind(a,b,c)
colnames(average)<-c("ICD10","MI","Mean")
average=as.data.frame(average)
rm(a,b,c)
ggplot(average,aes(ICD10,Mean)) + geom_bar(aes(fill=MI),position="dodge",stat="identity") + theme(legend.title=element_blank(),panel.grid.major=element_blank(),panel.grid.minor=element_blank(),panel.background=element_blank(),axis.line = element_line(colour="black")) + theme(text=element_text(size=20)) + labs(y="Polygenic Risk Score") + theme(legend.text=element_text(size=20)) + theme(axis.text.x=element_text(size=20),axis.title.y=element_text(size=20))
rm(i20,i25,r07,both,neither,i20.model,i25.model,r07.model,both.model,neither.model,i20.model2,i25.model2,r07.model2,both.model2,neither.model2,average,data)















####################################################################################################
# section 5: SNP analysis
####################################################################################################

# load data
rm(list=ls(all=TRUE))
total=read.table(file='hesin_registry_assess_cent_all_new_individual_clustered.tsv',sep='\t',header=TRUE,na.strings="",stringsAsFactors=FALSE)
snp=read.table(file='sign_snps.csv',sep=',',header=FALSE,na.strings="",stringsAsFactors=FALSE)
variant=read.table(file='variant_gw_cad.tsv',sep='\t',header=TRUE,na.strings="",stringsAsFactors=FALSE)
#install.packages("reshape2")
library(reshape2)
variant.new=acast(variant,ID~V,value.var="GT")
variant.new[is.na(variant.new)]<-0
variant.new=cbind("eid"=rownames(variant.new),variant.new)

# organize data
total.new=total[,c(1:7,11:16)]
total.new$cluster<-as.numeric(total.new$cluster)
total.new$sbp<-as.numeric(total.new$sbp)
total.new$dbp<-as.numeric(total.new$dbp)
total.new$bmi<-as.numeric(total.new$bmi)
total.new$smoking<-as.numeric(total.new$smoking)
total.new$PRS_0.5<-as.numeric(total.new$PRS_0.5)
all=merge(total.new,variant.new,by.x="eid",by.y="eid",all.x=TRUE)
all$sex<-ifelse(all$sex=="Male",1,0)

# calculate beta across clusters across SNPs
clusters=c("cluster0","cluster1","cluster2","cluster3","cluster4","cluster5","cluster6","cluster7","cluster8")
snps=colnames(all[,14:45])
betai=NULL
betaij=NULL
for (i in 1:length(snps)) {
	df=all[,c(which(colnames(all)=="cluster"),which(colnames(all)=="mi"),which(colnames(all)=="sex"),which(colnames(all)=="dob"),which(colnames(all) == snps[i]))]
	betai<-coef(glm(as.numeric(mi) ~ as.numeric(df[,5]) + as.numeric(sex) + as.numeric(dob),family=binomial(),data=df))[2]

	for (j in 1:length(clusters)) {
		df.new1=df[which(df$cluster==j),]
		df.new2=df[which(df$mi==0),]
		df.new=rbind(df.new1,df.new2)
		rm(df.new1,df.new2)
		betaij<-coef(glm(as.numeric(mi) ~ as.numeric(df.new[,5]) + as.numeric(sex) + as.numeric(dob),family=binomial(),data=df.new))[2]
		dif=(abs(betaij)-abs(betai))^2
		assign(paste("dif",j-1,sep=""),dif)
		print(j)
	}
	sum=sum(dif0,dif1,dif2,dif3,dif4,dif5,dif6,dif7,dif8)
	rm(dif0,dif1,dif2,dif3,dif4,dif5,dif6,dif7,dif8)
	assign(paste("sum",i,sep=""),sum)
	print(i)
}
var=rbind(sum1,sum2,sum3,sum4,sum5,sum6,sum7,sum8,sum9,sum10,sum11,sum12,sum13,sum14,sum15,sum16,sum17,sum18,sum19,sum20,sum21,sum22,sum23,sum24,sum25,sum26,sum27,sum28,sum29,sum30,sum31,sum32,sum.all=sum(sum1,sum2,sum3,sum4,sum5,sum6,sum7,sum8,sum9,sum10,sum11,sum12,sum13,sum14,sum15,sum16,sum17,sum18,sum19,sum20,sum21,sum22,sum23,sum24,sum25,sum26,sum27,sum28,sum29,sum30,sum31,sum32))
rm(i,df,betai,j,df.new,betaij,dif,sum,sum1,sum2,sum3,sum4,sum5,sum6,sum7,sum8,sum9,sum10,sum11,sum12,sum13,sum14,sum15,sum16,sum17,sum18,sum19,sum20,sum21,sum22,sum23,sum24,sum25,sum26,sum27,sum28,sum29,sum30,sum31,sum32)
#780.6171

# randomize clusters
old=all$cluster
new=sample(old,nrow(all),replace=FALSE)
all2=all
all2$cluster = new
rm(old,new)

# calculate beta across clusters across SNPs for random clusters
clusters=c("cluster0","cluster1","cluster2","cluster3","cluster4","cluster5","cluster6","cluster7","cluster8")
snps=colnames(all2[,14:45])
betai=NULL
betaij=NULL
for (i in 1:length(snps)) {
	df=all2[,c(which(colnames(all2)=="cluster"),which(colnames(all2)=="mi"),which(colnames(all2)=="sex"),which(colnames(all2)=="dob"),which(colnames(all2) == snps[i]))]
	betai<-coef(glm(as.numeric(mi) ~ as.numeric(df[,5]) + as.numeric(sex) + as.numeric(dob),family=binomial(),data=df))[2]

	for (j in 1:length(clusters)) {
		df.new1=df[which(df$cluster==j),]
		df.new2=df[which(df$mi==0),]
		df.new=rbind(df.new1,df.new2)
		rm(df.new1,df.new2)
		betaij<-coef(glm(as.numeric(mi) ~ as.numeric(df.new[,5]) + as.numeric(sex) + as.numeric(dob),family=binomial(),data=df.new))[2]
		dif=(abs(betaij)-abs(betai))^2
		assign(paste("dif",j-1,sep=""),dif)
		print(j)
	}
	sum=sum(dif0,dif1,dif2,dif3,dif4,dif5,dif6,dif7,dif8)
	rm(dif0,dif1,dif2,dif3,dif4,dif5,dif6,dif7,dif8)
	assign(paste("sum",i,sep=""),sum)
	print(i)
}
var2=rbind(sum1,sum2,sum3,sum4,sum5,sum6,sum7,sum8,sum9,sum10,sum11,sum12,sum13,sum14,sum15,sum16,sum17,sum18,sum19,sum20,sum21,sum22,sum23,sum24,sum25,sum26,sum27,sum28,sum29,sum30,sum31,sum32,sum.all=sum(sum1,sum2,sum3,sum4,sum5,sum6,sum7,sum8,sum9,sum10,sum11,sum12,sum13,sum14,sum15,sum16,sum17,sum18,sum19,sum20,sum21,sum22,sum23,sum24,sum25,sum26,sum27,sum28,sum29,sum30,sum31,sum32))
rm(i,df,betai,j,df.new,betaij,dif,sum,sum1,sum2,sum3,sum4,sum5,sum6,sum7,sum8,sum9,sum10,sum11,sum12,sum13,sum14,sum15,sum16,sum17,sum18,sum19,sum20,sum21,sum22,sum23,sum24,sum25,sum26,sum27,sum28,sum29,sum30,sum31,sum32)