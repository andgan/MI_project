# reanalysis

# section 1: merge data
# section 2: filter data
# section 3: principal component analysis
# section 4: analyze I20, I25, R07, and R10
# section 5: SNP analysis

# load libraries 
# install.packages("survival")
library(survival)

# identify the data path
path <- "C:/Jiwoo Lee/Myocardial Infarction Research Project 2017/"

##################################################
# section 1: get data
##################################################

# ID, ICD10, and ICD10 date from registry data
total = read.table(file = paste0(path,'hesin_registry.tsv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE, na.strings = "")
total = total[, c(1, 11, 23)]
icd10 = substr(total$diag_icd10, 0, 3)
total = cbind(total, icd10)
total = total[, c(1, 4, 3)]
write.table(total, file = paste0(path,'hesin_registry_new.tsv'), sep = '\t', row.names=F, quote=F)

# plot distribution of ICD10 codes to find timeframe for study
plot(table(total$epistart), xlab = "ICD Date", ylab = "Frequency")
# January 1998 to April 2015

# get and clean assessment center data
load('out4.Rdata')
# sex (f31), assessment center visit date (f53), assessment center visit age (f21003), assessment center location (f54), date of myocardial infarction (f42000), date of stroke (f42006), systolic blood pressure (f4080), diastolic blood pressure (f4079), body mass index (f21001), and smoking status (f20116)
bdE4_new = bdE4[, c("f.eid", "f.31.0.0", "f.53.0.0", "f.21003.0.0", "f.54.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0", "f.21001.0.0", "f.20116.0.0")]
write.table(bdE4_new, file='assess_cent_all.tsv',sep='\t', row.names=F, quote=F)

# merge registry data and assessment center data

reg = read.table(file = paste0(path,'hesin_registry_new.tsv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE)
ac = read.table(file = paste0(path,'assess_cent_all.tsv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE)
load(paste0(path,'dU.Rdata'))
ac.new = ac[, c("f.eid", "f.21003.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0")]
ac.all = merge(ac.new, dU, by.x = "f.eid", by.y = "eid", all.x = TRUE)
data = merge(reg, ac.all, by.x = "eid", by.y = "f.eid", all.y = TRUE)
colnames(data) = c("eid", "icd10", "icd10_date", "ac_age", "mi_date", "stroke_date", "sbp", "dbp", "birth_date", "sex", "death", "death_date", "ac_date", "ac_location", "bmi", "bp", "smoke", "age")
data = data[, c("eid", "sex", "age", "birth_date", "death", "death_date", "bp", "sbp", "dbp", "bmi", "smoke", "mi_date", "stroke_date", "icd10", "icd10_date", "ac_date", "ac_location", "ac_age")]
write.table(data, file = paste0(path,'hesin_registry_assess_cent_all_v2.csv'), sep = '\t', row.names=F, quote=F)

##################################################
# section 2: filter data 
##################################################

# get data
total = read.table(file = paste0(path,'hesin_registry_assess_cent_all_v2.csv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE)

# make mi_date as a date rather than a string
total$mi_date <- as.Date(total$mi_date, "%Y-%m-%d")

# make icd10_date as a date rather than a string
total$icd10_date <- as.Date(total$icd10_date, "%Y-%m-%d")

# create end-of-follow up analysis, which is first occurence of 2015-03-31 or MI or death
total$endfollowup <- ifelse(!is.na(total$death_date) & is.na(total$mi_date), as.Date(total$death_date, "%Y-%m-%d"),
					 ifelse(!is.na(total$mi_date), as.Date(total$mi_date, "%Y-%m-%d"), as.Date("2015-03-01", "%Y-%m-%d")))
class(total$endfollowup)<- "Date"

# create start-of-follow up, which is 1998-01-01
total$startfollowup <- as.Date("1998-01-01", "%Y-%m-%d")

nrow(total)
#2864652 rows
length(unique(total$eid))
#498828 individuals
length(unique(total$icd10))
#1472 ICD codes
length(unique(total[which(!is.na(total$mi_date)), ]$eid))
#17959 individuals with MI

# set to missing ICD10 codes/dates that are not related to disease (e.g., car crash)
total.new = total
total.new$icd10[grepl("^V|^Z", total.new$icd10)] <- NA
total.new$icd10_date[grepl("^V|^Z", total.new$icd10)] <- NA
nrow(total.new)
#2864652 rows
length(unique(total.new$eid))
#498828 individuals
length(unique(total.new$icd10))
#1393 ICD codes
length(unique(total.new[which(!is.na(total.new$mi_date)), ]$eid))
#17959 individuals with MI


# remove individuals with myocardial infarction outside of timeframe
to_remove <- total.new$eid[total.new$mi_date > as.Date("2015-03-01", "%Y-%m-%d") | total.new$mi_date < total.new$startfollowup]
to_remove <- unique(to_remove[!is.na(to_remove)])
total.new = total.new[!total.new$eid %in% to_remove,]
nrow(total.new)
#2816591 rows
length(unique(total.new$eid))
#495453 individuals
length(unique(total.new$icd10))
#1393 ICD codes
length(unique(total.new[which(!is.na(total.new$mi_date)), ]$eid))
#14584 individuals with MI

# set to missing ICD10 codes/dates outside of timeframe or less than 7 days from MI date
total.new$icd10[total.new$icd10_date > as.Date("2015-03-01", "%Y-%m-%d") | total.new$icd10_date < total.new$startfollowup] <- NA
total.new$icd10_date[total.new$icd10_date > as.Date("2015-03-01", "%Y-%m-%d") | total.new$icd10_date < total.new$startfollowup] <- NA
total.new$icd10[(total.new$mi_date - total.new$icd10_date) < 8] <- NA
total.new$icd10_date[(total.new$mi_date - total.new$icd10_date) < 8] <- NA
nrow(total.new)
#2816591 rows
length(unique(total.new$eid))
#495453 individuals
length(unique(total.new$icd10))
#1385 ICD codes
length(unique(total.new[which(!is.na(total.new$mi_date)), ]$eid))
#14584 individuals with MI

# remove individuals with I25 before MI
# LET'S CHECK WITH ERIK IF THIS EXCLUSION IS NEED IT
to_remove <- total.new$eid[total.new$icd10 == "I25"]
to_remove <- unique(to_remove[!is.na(to_remove)])
total.new = total.new[!total.new$eid %in% to_remove, ]
nrow(total.new)
#2644684 rows
length(unique(total.new$eid))
#483171 individuals
length(unique(total.new$icd10))
#1375 ICD codes
length(unique(total.new[which(!is.na(total.new$mi_date)), ]$eid))
#12765 individuals with MI

# keep only unique individuals with MI
total.newT <- total.new[!is.na(total.new$mi_date), ]
total.newMI <- total.newT[!duplicated(total.newT$eid), c("eid","mi_date")]

# keep only unique individuals (and a subset of variables from total.new)
total.newU <- total.new[!duplicated(total.new$eid), c("eid", "sex", "age", "death", "death_date", "endfollowup", "startfollowup")]

# loop across ICD10 codes associated with MI and n > 10
icd.mi <- total.new$icd10[!is.na(total.new$mi_date)]
icd.all <- names(table(icd.mi))[table(icd.mi) > 10]
res <- NULL
for (i in 1:length(icd.all)) {

	# Keep unique record for the comorbity examined
      total.newT <- total.new[total.new$icd10 == icd.all[i] & !is.na(total.new$icd10), ]
 
      # Sort and keep the first event for each individual
      total.new.sorted <- total.newT[order(total.newT$eid, as.numeric(total.newT$icd10_date)), ]
      total.new.sortedU <- total.new.sorted[!duplicated(total.new.sorted$eid), c("eid", "icd10_date")]
      
      # Merge the ICD-only dataset with the main dataset
      temp1 <- merge(total.newU, total.new.sortedU, all.x = T, by = "eid")

      # Now add the MI-only dataset
      total.comorb <- merge(temp1, total.newMI, all.x = T, by = "eid")

      # Assign pred and MI
      total.comorb$pred <- ifelse(is.na(total.comorb$icd10_date), 0, 1)
      total.comorb$mi <- ifelse(is.na(total.comorb$mi_date), 0, 1)

      # If you have the ICD you contribute as unexposed (trt=0) from when you enter to when you get the ICD
	data1 <- subset(total.comorb, pred == 1)
      data1$tstart <- 0
      data1$tstop <- as.numeric(data1$icd10_date - data1$startfollowup)
      data1$outP <- 0
      data1$trt <- 0
      
      # Then ... (here we duplicate the rows)
      # If you have the ICD, you contribute as exposed (trt=1) from when you get the ICD untill end of follow-up (which can be death/MI/of 2015)
      data2 <- subset(total.comorb, pred == 1)
      data2$tstart <- as.numeric(data2$icd10_date - data2$startfollowup)
      data2$tstop <- as.numeric(data2$endfollowup - data2$startfollowup)
      data2$outP <- data2$mi
      data2$trt <- 1
      
      # If you don't have the ICD, but you have MI you contribute as unexposed (trt=0) from when you enter until the MI date
      data3 <- subset(total.comorb, pred == 0 & mi == 1)
      data3$tstart <- 0
      data3$tstop <- as.numeric(data3$endfollowup - data3$startfollowup)
      data3$outP <- 1
      data3$trt <- 0

      dataF <- rbind(data1, data2, data3)

      # If you don't have the ICD or MI you contribute as unexposed (trt=0) from when you enter untill you exit the study
      otherdata <- subset(total.comorb, pred != 1 & mi != 1)
      
      otherdata$tstart <- 0
      otherdata$tstop <- as.numeric(otherdata$endfollowup - otherdata$startfollowup)
      otherdata$outP <- 0
      otherdata$trt <- 0
      
      findata <- rbind(dataF, otherdata)

      # This is because there is one individuals where tstart=tstop
      findata <- findata[findata$tstart < findata$tstop, ]


      mod <- coxph(Surv(tstart, tstop, outP) ~ age + trt + sex, data = findata)


	  res <- rbind(res, coef(summary(mod))[2, c(1, 4)])

	print(i)
}
rownames(res) <- icd.all
resdf = as.data.frame(res)
resdf = cbind(icd10 = rownames(resdf), resdf)
rownames(resdf) <- 1:nrow(resdf)
write.table(resdf, file = paste0(path,'survivalanalysis.tsv'), sep = "\t", row.names = FALSE, col.names = TRUE, quote=F)

# filter data based on results from survival analysis
resdf = read.table(file = 'survivalanalysis.csv', sep = "", header = TRUE)

NEXT STEPS
-> filter based on what criteria?
-> do principal component analysis and make clusters?
-> linear regression, anova, polygenic risk score, expected value, means of risk, AUC from ROC curve, odds ratio?
-> snp analysis?