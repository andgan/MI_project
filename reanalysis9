# reanalysis

# section 1: merge data
# section 2: filter data
# section 3: principal component analysis
# section 4: analyze I20, I25, R07, and R10
# section 5: SNP analysis


## Identify the data path
path <- "/Users/andreaganna/Documents/Work/Post_doc/jiwoo/"

##################################################
# section 1: get data
##################################################

# ID, ICD10, and ICD10 date from registry data
total = read.table(file = paste0(path,'hesin_registry.tsv'), sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
total = total[, c(1, 11, 23)]
icd10 = substr(total$diag_icd10, 0, 3)
total = cbind(total, icd10)
total = total[, c(1, 4, 3)]
write.table(total, file = paste0(path,'hesin_registry_new.tsv'), sep = '\t', row.names=F, quote=F)

# plot distribution of ICD10 codes to find timeframe for study
plot(table(total$epistart), xlab = "ICD Date", ylab = "Frequency")
# January 1998 to April 2015


# get and clean assessment center data
load('out4.Rdata')
# sex (f31), assessment center visit date (f53), assessment center visit age (f21003), assessment center location (f54), date of myocardial infarction (f42000), date of stroke (f42006), systolic blood pressure (f4080), diastolic blood pressure (f4079), body mass index (f21001), and smoking status (f20116)
bdE4_new = bdE4[, c("f.eid", "f.31.0.0", "f.53.0.0", "f.21003.0.0", "f.54.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0", "f.21001.0.0", "f.20116.0.0")]
write.table(bdE4_new, file='assess_cent_all.tsv',sep='\t', row.names=F, quote=F)

# merge registry data and assessment center data

reg = read.table(file = paste0(path,'hesin_registry_new.tsv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE)
ac = read.table(file = paste0(path,'assess_cent_all.tsv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE)
load(paste0(path,'dU.Rdata'))
ac.new = ac[, c("f.eid", "f.21003.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0")]
ac.all = merge(ac.new, dU, by.x = "f.eid", by.y = "eid", all.x = TRUE)
### IMPORTANT: here we want to keep everyone in ac.all so all.y=TRUE
data = merge(reg, ac.all, by.x = "eid", by.y = "f.eid", all.y = TRUE)
colnames(data) = c("eid", "icd10", "icd10_date", "ac_age", "mi_date", "stroke_date", "sbp", "dbp", "birth_date", "sex", "death", "death_date", "ac_date", "ac_location", "bmi", "bp", "smoke", "age")
data = data[, c("eid", "sex", "age", "birth_date", "death", "death_date", "bp", "sbp", "dbp", "bmi", "smoke", "mi_date", "stroke_date", "icd10", "icd10_date", "ac_date", "ac_location", "ac_age")]
write.table(data, file = paste0(path,'hesin_registry_assess_cent_all_v2.csv'), sep = '\t', row.names=F, quote=F)

##################################################
# section 2: filter data 
##################################################

# get data
total = read.table(file = paste0(path,'hesin_registry_assess_cent_all_v2.csv'), sep = '\t', header = TRUE, stringsAsFactors = FALSE)

# make mi_date as a date rather than a string
total$mi_date <- as.Date(total$mi_date, "%Y-%m-%d")

# make icd10_date as a data rather than a string
total$icd10_date <- as.Date(total$icd10_date, "%Y-%m-%d")


nrow(total)
#2864652 rows
length(unique(total$eid))
#498828 individuals
length(unique(total$icd10))
#1472 ICD codes
length(unique(total[which(!is.na(total$mi_date)), ]$eid))
#17959 individuals with MI

# set to missing ICD10 codes/dates that are not related to disease (e.g., car crash)
total.new = total
total.new$icd10[grepl("^V|^Z",total.new$icd10)] <- NA
total.new$icd10_date[grepl("^V|^Z",total.new$icd10)] <- NA
nrow(total.new)
#2864652 rows
length(unique(total.new$eid))
#498828 individuals
length(unique(total.new$icd10))
#1393 ICD codes
length(unique(total[which(!is.na(total$mi_date)), ]$eid))
#17959 individuals with MI


# remove individuals with myocardial infarction outside of timeframe
to_remove <- total.new$eid[total.new$mi_date > as.Date("2015-03-01", "%Y-%m-%d") | total.new$mi_date < as.Date("1998-01-01", "%Y-%m-%d")]
to_remove <- unique(to_remove[!is.na(to_remove)])

total.new = total.new[!total.new$eid %in% to_remove,]
nrow(total.new)
#2816591 rows
length(unique(total.new$eid))
#495453 individuals
length(unique(total.new$icd10))
#1393 ICD codes
length(unique(total[which(!is.na(total$mi_date)), ]$eid))
#17959 individuals with MI

# set to missing ICD10 codes/dates outside of timeframe or that are within 7 days from MI date
total.new$icd10[total.new$icd10_date > as.Date("2015-03-01", "%Y-%m-%d") | total.new$icd10_date < as.Date("1998-01-01", "%Y-%m-%d")] <- NA
total.new$icd10_date[total.new$icd10_date > as.Date("2015-03-01", "%Y-%m-%d") | total.new$icd10_date < as.Date("1998-01-01", "%Y-%m-%d")] <- NA
total.new$icd10[(total.new$mi_date - total.new$icd10_date) < 8] <- NA
nrow(total.new)
#2728566 rows
length(unique(total.new$eid))
#392743 individuals
length(unique(total.new$icd10))
#1384 ICD codes
length(unique(total[which(!is.na(total$mi_date)), ]$eid))
#17620 individuals with MI

# remove individuals with I25 before MI
# LET'S CHECK WITH ERIK IF THIS EXCLUSION IS NEED IT
to_remove <- total.new$eid[total.new$icd10 == "I25"]
to_remove <- unique(to_remove[!is.na(to_remove)])
total.new = total.new[!total.new$eid %in% to_remove, ]
nrow(total.new)
#2702582 rows
length(unique(total.new$eid))
#391918 individuals
length(unique(total.new$icd10))
#1383 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# make binary variable for myocardial infarction (e.g., 0 is no MI and 1 is MI)
total.new.mi = total.new[which(total.new$mi_date != 'NA'), ]
total.new.no.mi = total.new[which(total.new$mi_date == 'NA'), ]
total.new.mi = cbind(total.new.mi, "mi" = "1")
total.new.no.mi = cbind(total.new.no.mi, "mi" = "0")
total.new = rbind(total.new.mi, total.new.no.mi)
rm(total.new.mi, total.new.no.mi)

# exclude ICD10 codes after first diagnosis
total.new = total.new[order(total.new$icd10), ]
total.new = total.new[order(total.new$eid), ]
total.new = total.new[!duplicated(total.new[, c("eid", "icd10")], fromLast = FALSE), ]
nrow(total.new)
#1327144 rows
length(unique(total.new$eid))
#391918 individuals
length(unique(total.new$icd10))
#1383 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# loop across ICD10 codes associated with MI and n > 10
#install.packages("survival")
library(survival)
icd.mi <- total.new$icd10[total.new$mi == 1]
icd.all <- names(table(icd.mi))[table(icd.mi) > 10]
res <- NULL
for (i in 1:length(icd.all)) {
	id.icd = total.new$eid[total.new$icd10 == icd.all[i]]
	total.new$pred <- ifelse(total.new$eid %in% id.icd, 1, 0)

	# group 1 is icd and mi
	# group 2 is icd and no mi
	# group 3 is no icd and mi
	# group 4 is no icd and no mi

	data1 = subset(total.new, pred == 1 & mi == 1)
	data1$time1 = as.Date(data1$icd10_date) - as.Date("1998-01-01")
	data1$time2 = as.Date(data1$mi_date) - as.Date("1998-01-01")

	data2 = subset(total.new, pred == 1 & mi == 0)
	data2$time1 = 0
	data2$time2 = as.Date(data2$icd10_date) - as.Date("1998-01-01")

	data3 = subset(total.new, pred == 0 & mi == 1)
	data3$time1 = 0
	data3$time2 = as.Date(data3$mi_date) - as.Date("1998-01-01")

	data4 = subset(total.new, pred == 0 & mi == 0)
	data4$time1 = 0
	data4$time2 = as.Date("2015-03-31") - as.Date("1998-01-01")

	data.all = rbind(data1, data2, data3, data4)
	data.all = data.all[data.all$time1 < data.all$time2,]

	mod <- coxph(Surv(as.numeric(time1), as.numeric(time2), as.numeric(as.character(mi))) ~ as.numeric(age) + as.numeric(pred) + as.numeric(sex), data = data.all)

	res <- rbind(res, coef(summary(mod))[2, c(1, 4)])
	print(i)
}
rownames(res) <- icd.all
resdf = as.data.frame(res)
resdf = cbind(icd10 = rownames(resdf), resdf)
rownames(resdf) <- 1:nrow(resdf)
write.table(resdf, file = 'survivalanalysis.csv', sep = "\t", row.names = FALSE, col.names = TRUE)

# filter data based on results from survival analysis
resdf=read.table(file = 'survivalanalysis.csv', sep = "", header = TRUE)

* this is where i left off






### code from previous analysis

# filter ICD10 codes by p-value
rownames(res[which(res[,2]<(0.05/length(toloop))),])
total1$icd_new <- ifelse(total1$icd10 %in% rownames(res[which(res[,2]<(0.05/length(toloop))),]),as.character(total1$icd10),"NA")

# remove multiple NA rows
total1=total1[order(total1$icd_new),]
total1=total1[order(total1$eid),]
total1=total1[!duplicated(total1[,c("eid","icd_new")],fromLast=FALSE),]
nrow(total1)
#1047563 rows
length(unique(total1$eid))
#381952 individuals
length(unique(total1$icd_new))
#138 ICD codes
x=total1[which(total1$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#13249

# make final dataframe
total1$icd10_date[total1$icd_new == "NA"]="NA"
write.table(total1, file='hesin_registry_assess_cent_all_new_icd10_filtered.tsv',sep='\t')