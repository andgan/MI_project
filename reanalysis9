# reanalysis

# section 1: merge data
# section 2: filter data
# section 3: principal component analysis
# section 4: analyze I20, I25, R07, and R10
# section 5: SNP analysis

##################################################
# section 1: get data
##################################################

# get and clean registry data
/humgen/atgu1/fs03/wip/aganna/uk_bio/pheno/original/hesin_registry.tsv
# ID, ICD10, and ICD10 date from registry data
rm(list = ls(all = TRUE))
total = read.table(file = 'hesin_registry.tsv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
total = total[, c(1, 11, 23)]
icd10 = substr(total$diag_icd10, 0, 3)
total = cbind(total, icd10)
total = total[, c(1, 4, 3)]
write.table(total, file = 'hesin_registry_new.tsv', sep = '\t')

# plot distribution of ICD10 codes to find timeframe for study
plot(table(total$epistart), xlab = "ICD Date", ylab = "Frequency")
# January 1998 to April 2015

# get and clean assessment center data
setwd("/humgen/atgu1/fs03/wip/aganna/uk_bio/pheno/derived/")
load('out4.Rdata')
# sex (f31), assessment center visit date (f53), assessment center visit age (f21003), assessment center location (f54), date of myocardial infarction (f42000), date of stroke (f42006), systolic blood pressure (f4080), diastolic blood pressure (f4079), body mass index (f21001), and smoking status (f20116)
bdE4_new = bdE4[, c("f.eid", "f.31.0.0", "f.53.0.0", "f.21003.0.0", "f.54.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0", "f.21001.0.0", "f.20116.0.0")]
write.table(bdE4_new, file='assess_cent_all.tsv',sep='\t')

# merge registry data and assessment center data
rm(list = ls(all = TRUE))
reg = read.table(file = 'hesin_registry_new.tsv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
ac = read.table(file = 'assess_cent_all.tsv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
load('dU.Rdata')
ac.new = ac[, c("f.eid", "f.21003.0.0", "f.42000.0.0", "f.42006.0.0", "f.4080.0.0", "f.4079.0.0")]
ac.all = merge(ac.new, dU, by.x = "f.eid", by.y = "eid", all.x = TRUE)
data = merge(reg, ac.all, by.x = "eid", by.y = "f.eid", all.x = TRUE)
colnames(data) = c("eid", "icd10", "icd10_date", "ac_age", "mi_date", "stroke_date", "sbp", "dbp", "birth_date", "sex", "death", "death_date", "ac_date", "ac_location", "bmi", "bp", "smoke", "age")
data = data[, c("eid", "sex", "age", "birth_date", "death", "death_date", "bp", "sbp", "dbp", "bmi", "smoke", "mi_date", "stroke_date", "icd10", "icd10_date", "ac_date", "ac_location", "ac_age")]
write.table(data, file = 'hesin_registry_assess_cent_all_v2.csv', sep = '\t')

##################################################
# section 2: filter data 
##################################################

# get data
rm(list = ls(all = TRUE))
path = "C:/Jiwoo Lee/Myocardial Infarction Research Project 2017"
setwd(path)
total = read.table(file = 'hesin_registry_assess_cent_all_v2.csv', sep = '\t', header = TRUE, na.strings = "", stringsAsFactors = FALSE)
nrow(total)
#2779633 rows
length(unique(total$eid))
#395985 individuals
length(unique(total$icd10))
#1472 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# exclude ICD10 codes that are not related to disease (e.g., car crash)
total.new = total[order(total$icd10), ]
head(grep('V', total.new$icd10))
#2649168
tail(grep('Z', total.new$icd10))
#2779633
total.new$icd10[2649168:2779633] <- "NA"
nrow(total.new)
#2779633 rows
length(unique(total.new$eid))
#395985 individuals
length(unique(total.new$icd10))
#1389 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# remove ICD10 codes without a date
total.new.na = total.new[which(total.new$icd10 == 'NA'), ]
total.new.temp = total.new[-which(total.new$icd10 == 'NA'), ]
total.new.temp = total.new.temp[-which(total.new.temp$icd10_date == "NA"), ]
total.new = rbind(total.new.na, total.new.temp)
rm(total.new.temp, total.new.na)
nrow(total.new)
#2774909 rows
length(unique(total.new$eid))
#395826 individuals
length(unique(total.new$icd10))
#1389 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# remove individuals with myocardial infarction outside of timeframe
total.new = total.new[order(total.new$mi_date), ]
head(grep('1998-01', total.new$mi_date))
#43447
tail(grep('2015-03', total.new$mi_date))
#269102
head(grep('NA', total.new$mi_date))
#272000
tail(grep('NA', total.new$mi_date))
#2774909
total.new = total.new[c(43447:269102, 272000:2774909), ]
nrow(total.new)
#2728566 rows
length(unique(total.new$eid))
#392743 individuals
length(unique(total.new$icd10))
#1389 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# exclude ICD10 codes outside of timeframe
total.new.na = total.new[which(total.new$icd10_date == 'NA' | total.new$mi_date == 'NA'), ]
total.new.temp = total.new[-which(total.new$icd10_date == 'NA' | total.new$mi_date == 'NA'), ]
total.new.temp$icd10[as.Date(total.new.temp$icd10_date) > as.Date("2015-03-31")] = "NA"
total.new.temp$icd10[as.Date(total.new.temp$icd10_date) < as.Date("1998-01-01")] = "NA"
total.new.temp$icd10[as.Date(total.new.temp$mi_date) - as.Date(total.new.temp$icd10_date) < 8] = "NA"
total.new = rbind(total.new.temp, total.new.na)
rm(total.new.temp, total.new.na)
nrow(total.new)
#2728566 rows
length(unique(total.new$eid))
#392743 individuals
length(unique(total.new$icd10))
#1384 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# remove individuals with I25
total.new = total.new[!total.new$icd10 == "I25", ]
nrow(total.new)
#2702582 rows
length(unique(total.new$eid))
#391918 individuals
length(unique(total.new$icd10))
#1383 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# make binary variable for myocardial infarction (e.g., 0 is no MI and 1 is MI)
total.new.mi = total.new[which(total.new$mi_date != 'NA'), ]
total.new.no.mi = total.new[which(total.new$mi_date == 'NA'), ]
total.new.mi = cbind(total.new.mi, "mi" = "1")
total.new.no.mi = cbind(total.new.no.mi, "mi" = "0")
total.new = rbind(total.new.mi, total.new.no.mi)
rm(total.new.mi, total.new.no.mi)

# exclude ICD10 codes after first diagnosis
total.new = total.new[order(total.new$icd10), ]
total.new = total.new[order(total.new$eid), ]
total.new = total.new[!duplicated(total.new[, c("eid", "icd10")], fromLast = FALSE), ]
nrow(total.new)
#1327144 rows
length(unique(total.new$eid))
#391918 individuals
length(unique(total.new$icd10))
#1383 ICD codes
length(unique(total[which(total$mi_date != "NA"), ]$eid))
#17620 individuals with MI

# loop across ICD10 codes associated with MI and n > 10
#install.packages("survival")
library(survival)
icd.mi <- total.new$icd10[total.new$mi == 1]
icd.all <- names(table(icd.mi))[table(icd.mi) > 10]
res <- NULL
for (i in 1:length(icd.all)) {
	id.icd = total.new$eid[total.new$icd10 == icd.all[i]]
	total.new$pred <- ifelse(total.new$eid %in% id.icd, 1, 0)

	# group 1 is icd and mi
	# group 2 is icd and no mi
	# group 3 is no icd and mi
	# group 4 is no icd and no mi

	data1 = subset(total.new, pred == 1 & mi == 1)
	data1$time1 = as.Date(data1$icd10_date) - as.Date("1998-01-01")
	data1$time2 = as.Date(data1$mi_date) - as.Date("1998-01-01")

	data2 = subset(total.new, pred == 1 & mi == 0)
	data2$time1 = 0
	data2$time2 = as.Date(data2$icd10_date) - as.Date("1998-01-01")

	data3 = subset(total.new, pred == 0 & mi == 1)
	data3$time1 = 0
	data3$time2 = as.Date(data3$mi_date) - as.Date("1998-01-01")

	data4 = subset(total.new, pred == 0 & mi == 0)
	data4$time1 = 0
	data4$time2 = as.Date("2015-03-31") - as.Date("1998-01-01")

	data.all = rbind(data1, data2, data3, data4)
	data.all = data.all[data.all$time1 < data.all$time2,]

	mod <- coxph(Surv(as.numeric(time1), as.numeric(time2), as.numeric(as.character(mi))) ~ as.numeric(age) + as.numeric(pred) + as.numeric(sex), data = data.all)

	res <- rbind(res, coef(summary(mod))[2, c(1, 4)])
	print(i)
}
rownames(res) <- icd.all
resdf = as.data.frame(res)
resdf = cbind(icd10 = rownames(resdf), resdf)
rownames(resdf) <- 1:nrow(resdf)
write.table(resdf, file = 'survivalanalysis.csv', sep = "\t", row.names = FALSE, col.names = TRUE)

# filter data based on results from survival analysis
resdf=read.table(file = 'survivalanalysis.csv', sep = "", header = TRUE)

* this is where i left off






### code from previous analysis

# filter ICD10 codes by p-value
rownames(res[which(res[,2]<(0.05/length(toloop))),])
total1$icd_new <- ifelse(total1$icd10 %in% rownames(res[which(res[,2]<(0.05/length(toloop))),]),as.character(total1$icd10),"NA")

# remove multiple NA rows
total1=total1[order(total1$icd_new),]
total1=total1[order(total1$eid),]
total1=total1[!duplicated(total1[,c("eid","icd_new")],fromLast=FALSE),]
nrow(total1)
#1047563 rows
length(unique(total1$eid))
#381952 individuals
length(unique(total1$icd_new))
#138 ICD codes
x=total1[which(total1$mi_date!="NA"),]
length(unique(x$eid))
rm(x)
#13249

# make final dataframe
total1$icd10_date[total1$icd_new == "NA"]="NA"
write.table(total1, file='hesin_registry_assess_cent_all_new_icd10_filtered.tsv',sep='\t')